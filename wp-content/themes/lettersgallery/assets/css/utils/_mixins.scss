@use "./breakpoints";
@use "sass:math";
@use "sass:map";

@mixin transition($props...) {
  $transitions: ();
  @each $prop in $props {
    $transitions: append($transitions, #{$prop} $duration $timing-function, comma);
  }
  transition: $transitions;
}

@mixin hover($args...) {
  $transition-props: ();

  @each $arg in $args {
    $property: null;
    $start-value: null;
    $end-value: null;

    @if length($arg) == 3 {
      $property: nth($arg, 1);
      $start-value: nth($arg, 2);
      $end-value: nth($arg, 3);
    } @else if length($arg) == 2 {
      $property: nth($arg, 1);
      $start-value: nth($arg, 2);
      $end-value: null;
    }

    @if $property {
      $transition-props: append($transition-props, $property);

      #{$property}: $start-value;

      @media (hover: hover) {
        &:hover, &:focus {
          #{$property}: $end-value;
        }
      }
    }
  }

  @include transition($transition-props...);
}

@mixin paddingRatio($width, $height) {
  padding-top: calc(#{$height} / #{$width} * 100%);
}

@mixin fullHD() {
  @media (min-width: #{map.get($breakpoints-min, fullHD)}px) {
    @content;
  }
}

@mixin desktop() {
  @media (max-width: #{map.get($breakpoints-max, desktop)}px) {
    @content;
  }
}

@mixin tablet() {
  @media (max-width: #{map.get($breakpoints-max, tablet)}px) {
    @content;
  }
}

@mixin tabletPortrait() {
  @media (max-width: #{map.get($breakpoints-max, tabletPortrait)}px) {
    @content;
  }
}

@mixin mobile() {
  @media (max-width: #{map.get($breakpoints-max, mobile)}px) {
    @content;
  }
}